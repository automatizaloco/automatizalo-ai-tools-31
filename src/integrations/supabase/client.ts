
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import { toast } from 'sonner';
import type { Database } from './types';

const SUPABASE_URL = "https://juwbamkqkawyibcvllvo.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp1d2JhbWtxa2F3eWliY3ZsbHZvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE3MDUxMDIsImV4cCI6MjA1NzI4MTEwMn0.uqwyR5lwp8JXa7qAZu6nZcCEdaoKOxX0XxQls2vg7Fk";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
  },
  global: {
    headers: { 'x-application-name': 'automatizalo' },
  },
  db: {
    schema: 'public',
  },
});

// Add initialization logging
console.log("Supabase client initialized with URL:", SUPABASE_URL);

// Test connection
supabase.auth.getSession().then(({ data, error }) => {
  if (error) {
    console.error("Supabase connection error:", error.message);
    toast.error("Failed to connect to Supabase. Please check your network connection.");
  } else {
    console.log("Supabase connection successful. Session:", data.session ? "Active" : "None");
  }
}).catch(err => {
  console.error("Unexpected Supabase connection error:", err);
  toast.error("An error occurred while connecting to the database.");
});

// Add a helper function to handle Supabase errors consistently
export const handleSupabaseError = (error: any, defaultMessage: string = "An error occurred"): string => {
  console.error("Supabase error:", error);
  
  if (error?.code === "42P17") {
    return "Database permission error. Please contact an administrator.";
  }
  
  return error?.message || defaultMessage;
};
